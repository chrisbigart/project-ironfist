#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace ironfist {
    using namespace System;
    ref class NewDataSet;
    
    
    /// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
    [System::Serializable, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
    System::Xml::Serialization::XmlRootAttribute(L"NewDataSet"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
    public ref class NewDataSet : public ::System::Data::DataSet {
        public : ref class mapDataTable;
        public : ref class heroDataTable;
        public : ref class armyDataTable;
        public : ref class slotDataTable;
        public : ref class secondarySkillDataTable;
        public : ref class spellDataTable;
        public : ref class artifactDataTable;
        public : ref class mapRow;
        public : ref class heroRow;
        public : ref class armyRow;
        public : ref class slotRow;
        public : ref class secondarySkillRow;
        public : ref class spellRow;
        public : ref class artifactRow;
        public : ref class mapRowChangeEvent;
        public : ref class heroRowChangeEvent;
        public : ref class armyRowChangeEvent;
        public : ref class slotRowChangeEvent;
        public : ref class secondarySkillRowChangeEvent;
        public : ref class spellRowChangeEvent;
        public : ref class artifactRowChangeEvent;
        
        private: ironfist::NewDataSet::mapDataTable^  tablemap;
        
        private: ironfist::NewDataSet::heroDataTable^  tablehero;
        
        private: ironfist::NewDataSet::armyDataTable^  tablearmy;
        
        private: ironfist::NewDataSet::slotDataTable^  tableslot;
        
        private: ironfist::NewDataSet::secondarySkillDataTable^  tablesecondarySkill;
        
        private: ironfist::NewDataSet::spellDataTable^  tablespell;
        
        private: ironfist::NewDataSet::artifactDataTable^  tableartifact;
        
        private: ::System::Data::DataRelation^  relationmap_hero;
        
        private: ::System::Data::DataRelation^  relationhero_army;
        
        private: ::System::Data::DataRelation^  relationarmy_slot;
        
        private: ::System::Data::DataRelation^  relationhero_secondarySkill;
        
        private: ::System::Data::DataRelation^  relationhero_spell;
        
        private: ::System::Data::DataRelation^  relationhero_artifact;
        
        private: ::System::Data::SchemaSerializationMode _schemaSerializationMode;
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void mapRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::mapRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void heroRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::heroRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void armyRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::armyRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void slotRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::slotRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void secondarySkillRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::secondarySkillRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void spellRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::spellRowChangeEvent^  e);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        delegate System::Void artifactRowChangeEventHandler(::System::Object^  sender, ironfist::NewDataSet::artifactRowChangeEvent^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet();
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::mapDataTable^  map {
            ironfist::NewDataSet::mapDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::heroDataTable^  hero {
            ironfist::NewDataSet::heroDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::armyDataTable^  army {
            ironfist::NewDataSet::armyDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::slotDataTable^  slot {
            ironfist::NewDataSet::slotDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::secondarySkillDataTable^  secondarySkill {
            ironfist::NewDataSet::secondarySkillDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::spellDataTable^  spell {
            ironfist::NewDataSet::spellDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
        property ironfist::NewDataSet::artifactDataTable^  artifact {
            ironfist::NewDataSet::artifactDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::BrowsableAttribute(true), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Visible)]
        virtual property ::System::Data::SchemaSerializationMode SchemaSerializationMode {
            ::System::Data::SchemaSerializationMode get() override;
            System::Void set(::System::Data::SchemaSerializationMode value) override;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataTableCollection^  Tables {
            ::System::Data::DataTableCollection^  get() new;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
        property ::System::Data::DataRelationCollection^  Relations {
            ::System::Data::DataRelationCollection^  get() new;
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void InitializeDerivedDataSet() override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataSet^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeTables() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Boolean ShouldSerializeRelations() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void ReadXmlSerializable(::System::Xml::XmlReader^  reader) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars(::System::Boolean initTable);
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializemap();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializehero();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializearmy();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeslot();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializesecondarySkill();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializespell();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean ShouldSerializeartifact();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class mapDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnraw;
            
            private: ::System::Data::DataColumn^  columnmap_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::mapRowChangeEventHandler^  mapRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::mapRowChangeEventHandler^  mapRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::mapRowChangeEventHandler^  mapRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::mapRowChangeEventHandler^  mapRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            mapDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            mapDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            mapDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  rawColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  map_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::mapRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::mapRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddmapRow(ironfist::NewDataSet::mapRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::mapRow^  AddmapRow(cli::array< System::Byte >^  raw);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::mapRow^  NewmapRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovemapRow(ironfist::NewDataSet::mapRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class heroDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnspellpoints;
            
            private: ::System::Data::DataColumn^  columnidx;
            
            private: ::System::Data::DataColumn^  columnownerIdx;
            
            private: ::System::Data::DataColumn^  columnfield_4;
            
            private: ::System::Data::DataColumn^  columnfield_5;
            
            private: ::System::Data::DataColumn^  columnfield_6;
            
            private: ::System::Data::DataColumn^  columnfield_7;
            
            private: ::System::Data::DataColumn^  columnfield_8;
            
            private: ::System::Data::DataColumn^  columnfield_9;
            
            private: ::System::Data::DataColumn^  columnname;
            
            private: ::System::Data::DataColumn^  columnfactionID;
            
            private: ::System::Data::DataColumn^  columnheroID;
            
            private: ::System::Data::DataColumn^  columnx;
            
            private: ::System::Data::DataColumn^  columny;
            
            private: ::System::Data::DataColumn^  columnfield_21;
            
            private: ::System::Data::DataColumn^  columnfield_23;
            
            private: ::System::Data::DataColumn^  columnfield_25;
            
            private: ::System::Data::DataColumn^  columnfield_27;
            
            private: ::System::Data::DataColumn^  columnfield_29;
            
            private: ::System::Data::DataColumn^  columnfield_2B;
            
            private: ::System::Data::DataColumn^  columnoccupiedObjType;
            
            private: ::System::Data::DataColumn^  columnoccupiedObjVal;
            
            private: ::System::Data::DataColumn^  columnmobility;
            
            private: ::System::Data::DataColumn^  columnremainingMobility;
            
            private: ::System::Data::DataColumn^  columnexperience;
            
            private: ::System::Data::DataColumn^  columnoldLevel;
            
            private: ::System::Data::DataColumn^  columnattack;
            
            private: ::System::Data::DataColumn^  columndefense;
            
            private: ::System::Data::DataColumn^  columnspellpower;
            
            private: ::System::Data::DataColumn^  columnknowledge;
            
            private: ::System::Data::DataColumn^  columnfield_43;
            
            private: ::System::Data::DataColumn^  columntempMoraleBonuses;
            
            private: ::System::Data::DataColumn^  columntempLuckBonuses;
            
            private: ::System::Data::DataColumn^  columnfield_46;
            
            private: ::System::Data::DataColumn^  columngazeboesVisited;
            
            private: ::System::Data::DataColumn^  columnfortsVisited;
            
            private: ::System::Data::DataColumn^  columnwitchDoctorHutsVisited;
            
            private: ::System::Data::DataColumn^  columnmercenaryCampsVisited;
            
            private: ::System::Data::DataColumn^  columnstandingStonesVisited;
            
            private: ::System::Data::DataColumn^  columntreesOfKnowledgeVisited;
            
            private: ::System::Data::DataColumn^  columnxanadusVisited;
            
            private: ::System::Data::DataColumn^  columnrandomSeed;
            
            private: ::System::Data::DataColumn^  columnwisdomLastOffered;
            
            private: ::System::Data::DataColumn^  columnflags;
            
            private: ::System::Data::DataColumn^  columnisCaptain;
            
            private: ::System::Data::DataColumn^  columnfield_E8;
            
            private: ::System::Data::DataColumn^  columnhero_Id;
            
            private: ::System::Data::DataColumn^  columnmap_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::heroRowChangeEventHandler^  heroRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::heroRowChangeEventHandler^  heroRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::heroRowChangeEventHandler^  heroRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::heroRowChangeEventHandler^  heroRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            heroDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            heroDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            heroDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spellpointsColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  idxColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  ownerIdxColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_4Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_5Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_6Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_7Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_8Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_9Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  nameColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  factionIDColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  heroIDColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  xColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  yColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_21Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_23Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_25Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_27Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_29Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_2BColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  occupiedObjTypeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  occupiedObjValColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  mobilityColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  remainingMobilityColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  experienceColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  oldLevelColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  attackColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  defenseColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spellpowerColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  knowledgeColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_43Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  tempMoraleBonusesColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  tempLuckBonusesColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_46Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  gazeboesVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  fortsVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  witchDoctorHutsVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  mercenaryCampsVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  standingStonesVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  treesOfKnowledgeVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  xanadusVisitedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  randomSeedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  wisdomLastOfferedColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  flagsColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  isCaptainColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  field_E8Column {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  hero_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  map_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::heroRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::heroRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddheroRow(ironfist::NewDataSet::heroRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::heroRow^  AddheroRow(
                        System::Int32 spellpoints, 
                        System::Int32 idx, 
                        System::Int32 ownerIdx, 
                        System::Int32 field_4, 
                        System::Int32 field_5, 
                        System::Int32 field_6, 
                        System::Int32 field_7, 
                        System::Int32 field_8, 
                        System::Int32 field_9, 
                        System::String^  name, 
                        System::Int32 factionID, 
                        System::Int32 heroID, 
                        System::Int32 x, 
                        System::Int32 y, 
                        System::Int32 field_21, 
                        System::Int32 field_23, 
                        System::Int32 field_25, 
                        System::Int32 field_27, 
                        System::Int32 field_29, 
                        System::Int32 field_2B, 
                        System::Int32 occupiedObjType, 
                        System::Int32 occupiedObjVal, 
                        System::Int32 mobility, 
                        System::Int32 remainingMobility, 
                        System::Int32 experience, 
                        System::Int32 oldLevel, 
                        System::Int32 attack, 
                        System::Int32 defense, 
                        System::Int32 spellpower, 
                        System::Int32 knowledge, 
                        System::Int32 field_43, 
                        System::Int32 tempMoraleBonuses, 
                        System::Int32 tempLuckBonuses, 
                        System::Int32 field_46, 
                        System::Int32 gazeboesVisited, 
                        System::Int32 fortsVisited, 
                        System::Int32 witchDoctorHutsVisited, 
                        System::Int32 mercenaryCampsVisited, 
                        System::Int32 standingStonesVisited, 
                        System::Int32 treesOfKnowledgeVisited, 
                        System::Int32 xanadusVisited, 
                        System::Int32 randomSeed, 
                        System::Boolean wisdomLastOffered, 
                        System::Int32 flags, 
                        System::Boolean isCaptain, 
                        System::Int32 field_E8, 
                        ironfist::NewDataSet::mapRow^  parentmapRowBymap_hero);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::heroRow^  NewheroRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveheroRow(ironfist::NewDataSet::heroRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class armyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnarmy_Id;
            
            private: ::System::Data::DataColumn^  columnhero_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::armyRowChangeEventHandler^  armyRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::armyRowChangeEventHandler^  armyRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::armyRowChangeEventHandler^  armyRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::armyRowChangeEventHandler^  armyRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            armyDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            armyDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            armyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  army_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  hero_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::armyRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::armyRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddarmyRow(ironfist::NewDataSet::armyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::armyRow^  AddarmyRow(ironfist::NewDataSet::heroRow^  parentheroRowByhero_army);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::armyRow^  NewarmyRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovearmyRow(ironfist::NewDataSet::armyRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class slotDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnid;
            
            private: ::System::Data::DataColumn^  columnquantity;
            
            private: ::System::Data::DataColumn^  columnarmy_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::slotRowChangeEventHandler^  slotRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::slotRowChangeEventHandler^  slotRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::slotRowChangeEventHandler^  slotRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::slotRowChangeEventHandler^  slotRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            slotDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            slotDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            slotDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  idColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  quantityColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  army_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::slotRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::slotRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddslotRow(ironfist::NewDataSet::slotRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::slotRow^  AddslotRow(System::Int32 id, System::Int32 quantity, ironfist::NewDataSet::armyRow^  parentarmyRowByarmy_slot);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::slotRow^  NewslotRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveslotRow(ironfist::NewDataSet::slotRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class secondarySkillDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnid;
            
            private: ::System::Data::DataColumn^  columnlevel;
            
            private: ::System::Data::DataColumn^  columnidx;
            
            private: ::System::Data::DataColumn^  columnhero_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::secondarySkillRowChangeEventHandler^  secondarySkillRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::secondarySkillRowChangeEventHandler^  secondarySkillRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::secondarySkillRowChangeEventHandler^  secondarySkillRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::secondarySkillRowChangeEventHandler^  secondarySkillRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            secondarySkillDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            secondarySkillDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            secondarySkillDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  idColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  levelColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  idxColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  hero_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::secondarySkillRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::secondarySkillRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddsecondarySkillRow(ironfist::NewDataSet::secondarySkillRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::secondarySkillRow^  AddsecondarySkillRow(System::Int32 id, System::Int32 level, System::Int32 idx, 
                        ironfist::NewDataSet::heroRow^  parentheroRowByhero_secondarySkill);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::secondarySkillRow^  NewsecondarySkillRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovesecondarySkillRow(ironfist::NewDataSet::secondarySkillRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class spellDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnspell_Column;
            
            private: ::System::Data::DataColumn^  columnhero_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::spellRowChangeEventHandler^  spellRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::spellRowChangeEventHandler^  spellRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::spellRowChangeEventHandler^  spellRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::spellRowChangeEventHandler^  spellRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spellDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spellDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spellDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spell_ColumnColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  hero_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::spellRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::spellRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddspellRow(ironfist::NewDataSet::spellRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::spellRow^  AddspellRow(System::Int32 spell_Column, ironfist::NewDataSet::heroRow^  parentheroRowByhero_spell);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::spellRow^  NewspellRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemovespellRow(ironfist::NewDataSet::spellRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
        [System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class artifactDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
            
            private: ::System::Data::DataColumn^  columnid;
            
            private: ::System::Data::DataColumn^  columnspell;
            
            private: ::System::Data::DataColumn^  columnhero_Id;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::artifactRowChangeEventHandler^  artifactRowChanging;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::artifactRowChangeEventHandler^  artifactRowChanged;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::artifactRowChangeEventHandler^  artifactRowDeleting;
            
            public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            event ironfist::NewDataSet::artifactRowChangeEventHandler^  artifactRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            artifactDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            artifactDataTable(::System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            artifactDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  idColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  spellColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataColumn^  hero_IdColumn {
                ::System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
            System::ComponentModel::Browsable(false)]
            property ::System::Int32 Count {
                ::System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::artifactRow^  default [::System::Int32 ] {
                ironfist::NewDataSet::artifactRow^  get(::System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void AddartifactRow(ironfist::NewDataSet::artifactRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::artifactRow^  AddartifactRow(System::Int32 id, System::Int32 spell, ironfist::NewDataSet::heroRow^  parentheroRowByhero_artifact);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ironfist::NewDataSet::artifactRow^  NewartifactRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void RemoveartifactRow(ironfist::NewDataSet::artifactRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class mapRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::mapDataTable^  tablemap;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            mapRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property cli::array< System::Byte >^  raw {
                cli::array< System::Byte >^  get();
                System::Void set(cli::array< System::Byte >^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 map_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< ironfist::NewDataSet::heroRow^  >^  GetheroRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class heroRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::heroDataTable^  tablehero;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            heroRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 spellpoints {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 idx {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 ownerIdx {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_4 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_5 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_6 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_7 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_8 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_9 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::String^  name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 factionID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 heroID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 x {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 y {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_21 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_23 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_25 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_27 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_29 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_2B {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 occupiedObjType {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 occupiedObjVal {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 mobility {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 remainingMobility {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 experience {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 oldLevel {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 attack {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 defense {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 spellpower {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 knowledge {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_43 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 tempMoraleBonuses {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 tempLuckBonuses {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_46 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 gazeboesVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 fortsVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 witchDoctorHutsVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 mercenaryCampsVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 standingStonesVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 treesOfKnowledgeVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 xanadusVisited {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 randomSeed {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean wisdomLastOffered {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 flags {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Boolean isCaptain {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 field_E8 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 hero_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 map_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::mapRow^  mapRow {
                ironfist::NewDataSet::mapRow^  get();
                System::Void set(ironfist::NewDataSet::mapRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Ismap_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setmap_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< ironfist::NewDataSet::armyRow^  >^  GetarmyRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< ironfist::NewDataSet::secondarySkillRow^  >^  GetsecondarySkillRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< ironfist::NewDataSet::spellRow^  >^  GetspellRows();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< ironfist::NewDataSet::artifactRow^  >^  GetartifactRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class armyRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::armyDataTable^  tablearmy;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            armyRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 army_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 hero_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::heroRow^  heroRow {
                ironfist::NewDataSet::heroRow^  get();
                System::Void set(ironfist::NewDataSet::heroRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Ishero_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Sethero_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            cli::array< ironfist::NewDataSet::slotRow^  >^  GetslotRows();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class slotRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::slotDataTable^  tableslot;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            slotRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 quantity {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 army_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::armyRow^  armyRow {
                ironfist::NewDataSet::armyRow^  get();
                System::Void set(ironfist::NewDataSet::armyRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsidNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetidNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsquantityNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetquantityNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isarmy_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setarmy_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class secondarySkillRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::secondarySkillDataTable^  tablesecondarySkill;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            secondarySkillRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 level {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 idx {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 hero_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::heroRow^  heroRow {
                ironfist::NewDataSet::heroRow^  get();
                System::Void set(ironfist::NewDataSet::heroRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsidNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetidNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IslevelNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetlevelNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsidxNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetidxNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Ishero_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Sethero_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class spellRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::spellDataTable^  tablespell;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spellRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 spell_Column {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 hero_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::heroRow^  heroRow {
                ironfist::NewDataSet::heroRow^  get();
                System::Void set(ironfist::NewDataSet::heroRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Isspell_ColumnNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Setspell_ColumnNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Ishero_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Sethero_IdNull();
        };
        
        public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
        ref class artifactRow : public ::System::Data::DataRow {
            
            private: ironfist::NewDataSet::artifactDataTable^  tableartifact;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            artifactRow(::System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 spell {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property System::Int32 hero_Id {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::heroRow^  heroRow {
                ironfist::NewDataSet::heroRow^  get();
                System::Void set(ironfist::NewDataSet::heroRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean IsspellNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void SetspellNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Boolean Ishero_IdNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            ::System::Void Sethero_IdNull();
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class mapRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::mapRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            mapRowChangeEvent(ironfist::NewDataSet::mapRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::mapRow^  Row {
                ironfist::NewDataSet::mapRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class heroRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::heroRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            heroRowChangeEvent(ironfist::NewDataSet::heroRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::heroRow^  Row {
                ironfist::NewDataSet::heroRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class armyRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::armyRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            armyRowChangeEvent(ironfist::NewDataSet::armyRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::armyRow^  Row {
                ironfist::NewDataSet::armyRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class slotRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::slotRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            slotRowChangeEvent(ironfist::NewDataSet::slotRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::slotRow^  Row {
                ironfist::NewDataSet::slotRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class secondarySkillRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::secondarySkillRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            secondarySkillRowChangeEvent(ironfist::NewDataSet::secondarySkillRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::secondarySkillRow^  Row {
                ironfist::NewDataSet::secondarySkillRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class spellRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::spellRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            spellRowChangeEvent(ironfist::NewDataSet::spellRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::spellRow^  Row {
                ironfist::NewDataSet::spellRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
        
        public : /// <summary>
///Row event argument class
///</summary>
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ref class artifactRowChangeEvent : public ::System::EventArgs {
            
            private: ironfist::NewDataSet::artifactRow^  eventRow;
            
            private: ::System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            artifactRowChangeEvent(ironfist::NewDataSet::artifactRow^  row, ::System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ironfist::NewDataSet::artifactRow^  Row {
                ironfist::NewDataSet::artifactRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
            property ::System::Data::DataRowAction Action {
                ::System::Data::DataRowAction get();
            }
        };
    };
}
namespace ironfist {
    
    
    inline NewDataSet::NewDataSet() {
        this->BeginInit();
        this->InitClass();
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &ironfist::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        __super::Relations->CollectionChanged += schemaChangedHandler;
        this->EndInit();
    }
    
    inline NewDataSet::NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataSet(info, context, false) {
        if (this->IsBinarySerialized(info, context) == true) {
            this->InitVars(false);
            ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &ironfist::NewDataSet::SchemaChanged);
            this->Tables->CollectionChanged += schemaChangedHandler1;
            this->Relations->CollectionChanged += schemaChangedHandler1;
            return;
        }
        ::System::String^  strSchema = (cli::safe_cast<::System::String^  >(info->GetValue(L"XmlSchema", ::System::String::typeid)));
        if (this->DetermineSchemaSerializationMode(info, context) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
            if (ds->Tables[L"map"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::mapDataTable(ds->Tables[L"map"])));
            }
            if (ds->Tables[L"hero"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::heroDataTable(ds->Tables[L"hero"])));
            }
            if (ds->Tables[L"army"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::armyDataTable(ds->Tables[L"army"])));
            }
            if (ds->Tables[L"slot"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::slotDataTable(ds->Tables[L"slot"])));
            }
            if (ds->Tables[L"secondarySkill"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::secondarySkillDataTable(ds->Tables[L"secondarySkill"])));
            }
            if (ds->Tables[L"spell"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::spellDataTable(ds->Tables[L"spell"])));
            }
            if (ds->Tables[L"artifact"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::artifactDataTable(ds->Tables[L"artifact"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
        }
        this->GetSerializationData(info, context);
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &ironfist::NewDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        this->Relations->CollectionChanged += schemaChangedHandler;
    }
    
    inline ironfist::NewDataSet::mapDataTable^  NewDataSet::map::get() {
        return this->tablemap;
    }
    
    inline ironfist::NewDataSet::heroDataTable^  NewDataSet::hero::get() {
        return this->tablehero;
    }
    
    inline ironfist::NewDataSet::armyDataTable^  NewDataSet::army::get() {
        return this->tablearmy;
    }
    
    inline ironfist::NewDataSet::slotDataTable^  NewDataSet::slot::get() {
        return this->tableslot;
    }
    
    inline ironfist::NewDataSet::secondarySkillDataTable^  NewDataSet::secondarySkill::get() {
        return this->tablesecondarySkill;
    }
    
    inline ironfist::NewDataSet::spellDataTable^  NewDataSet::spell::get() {
        return this->tablespell;
    }
    
    inline ironfist::NewDataSet::artifactDataTable^  NewDataSet::artifact::get() {
        return this->tableartifact;
    }
    
    inline ::System::Data::SchemaSerializationMode NewDataSet::SchemaSerializationMode::get() {
        return this->_schemaSerializationMode;
    }
    inline System::Void NewDataSet::SchemaSerializationMode::set(::System::Data::SchemaSerializationMode value) {
        this->_schemaSerializationMode = __identifier(value);
    }
    
    inline ::System::Data::DataTableCollection^  NewDataSet::Tables::get() {
        return __super::Tables;
    }
    
    inline ::System::Data::DataRelationCollection^  NewDataSet::Relations::get() {
        return __super::Relations;
    }
    
    inline ::System::Void NewDataSet::InitializeDerivedDataSet() {
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline ::System::Data::DataSet^  NewDataSet::Clone() {
        ironfist::NewDataSet^  cln = (cli::safe_cast<ironfist::NewDataSet^  >(__super::Clone()));
        cln->InitVars();
        cln->SchemaSerializationMode = this->SchemaSerializationMode;
        return cln;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeTables() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeRelations() {
        return false;
    }
    
    inline ::System::Void NewDataSet::ReadXmlSerializable(::System::Xml::XmlReader^  reader) {
        if (this->DetermineSchemaSerializationMode(reader) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
            this->Reset();
            ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
            ds->ReadXml(reader);
            if (ds->Tables[L"map"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::mapDataTable(ds->Tables[L"map"])));
            }
            if (ds->Tables[L"hero"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::heroDataTable(ds->Tables[L"hero"])));
            }
            if (ds->Tables[L"army"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::armyDataTable(ds->Tables[L"army"])));
            }
            if (ds->Tables[L"slot"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::slotDataTable(ds->Tables[L"slot"])));
            }
            if (ds->Tables[L"secondarySkill"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::secondarySkillDataTable(ds->Tables[L"secondarySkill"])));
            }
            if (ds->Tables[L"spell"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::spellDataTable(ds->Tables[L"spell"])));
            }
            if (ds->Tables[L"artifact"] != nullptr) {
                __super::Tables->Add((gcnew ironfist::NewDataSet::artifactDataTable(ds->Tables[L"artifact"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXml(reader);
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchema^  NewDataSet::GetSchemaSerializable() {
        ::System::IO::MemoryStream^  stream = (gcnew ::System::IO::MemoryStream());
        this->WriteXmlSchema((gcnew ::System::Xml::XmlTextWriter(stream, nullptr)));
        stream->Position = 0;
        return ::System::Xml::Schema::XmlSchema::Read((gcnew ::System::Xml::XmlTextReader(stream)), nullptr);
    }
    
    inline ::System::Void NewDataSet::InitVars() {
        this->InitVars(true);
    }
    
    inline ::System::Void NewDataSet::InitVars(::System::Boolean initTable) {
        this->tablemap = (cli::safe_cast<ironfist::NewDataSet::mapDataTable^  >(__super::Tables[L"map"]));
        if (initTable == true) {
            if (this->tablemap != nullptr) {
                this->tablemap->InitVars();
            }
        }
        this->tablehero = (cli::safe_cast<ironfist::NewDataSet::heroDataTable^  >(__super::Tables[L"hero"]));
        if (initTable == true) {
            if (this->tablehero != nullptr) {
                this->tablehero->InitVars();
            }
        }
        this->tablearmy = (cli::safe_cast<ironfist::NewDataSet::armyDataTable^  >(__super::Tables[L"army"]));
        if (initTable == true) {
            if (this->tablearmy != nullptr) {
                this->tablearmy->InitVars();
            }
        }
        this->tableslot = (cli::safe_cast<ironfist::NewDataSet::slotDataTable^  >(__super::Tables[L"slot"]));
        if (initTable == true) {
            if (this->tableslot != nullptr) {
                this->tableslot->InitVars();
            }
        }
        this->tablesecondarySkill = (cli::safe_cast<ironfist::NewDataSet::secondarySkillDataTable^  >(__super::Tables[L"secondarySkill"]));
        if (initTable == true) {
            if (this->tablesecondarySkill != nullptr) {
                this->tablesecondarySkill->InitVars();
            }
        }
        this->tablespell = (cli::safe_cast<ironfist::NewDataSet::spellDataTable^  >(__super::Tables[L"spell"]));
        if (initTable == true) {
            if (this->tablespell != nullptr) {
                this->tablespell->InitVars();
            }
        }
        this->tableartifact = (cli::safe_cast<ironfist::NewDataSet::artifactDataTable^  >(__super::Tables[L"artifact"]));
        if (initTable == true) {
            if (this->tableartifact != nullptr) {
                this->tableartifact->InitVars();
            }
        }
        this->relationmap_hero = this->Relations[L"map_hero"];
        this->relationhero_army = this->Relations[L"hero_army"];
        this->relationarmy_slot = this->Relations[L"army_slot"];
        this->relationhero_secondarySkill = this->Relations[L"hero_secondarySkill"];
        this->relationhero_spell = this->Relations[L"hero_spell"];
        this->relationhero_artifact = this->Relations[L"hero_artifact"];
    }
    
    inline ::System::Void NewDataSet::InitClass() {
        this->DataSetName = L"NewDataSet";
        this->Prefix = L"";
        this->Namespace = L"ironfist_map";
        this->Locale = (gcnew ::System::Globalization::CultureInfo(L""));
        this->EnforceConstraints = true;
        this->SchemaSerializationMode = ::System::Data::SchemaSerializationMode::IncludeSchema;
        this->tablemap = (gcnew ironfist::NewDataSet::mapDataTable());
        __super::Tables->Add(this->tablemap);
        this->tablehero = (gcnew ironfist::NewDataSet::heroDataTable());
        __super::Tables->Add(this->tablehero);
        this->tablearmy = (gcnew ironfist::NewDataSet::armyDataTable());
        __super::Tables->Add(this->tablearmy);
        this->tableslot = (gcnew ironfist::NewDataSet::slotDataTable());
        __super::Tables->Add(this->tableslot);
        this->tablesecondarySkill = (gcnew ironfist::NewDataSet::secondarySkillDataTable());
        __super::Tables->Add(this->tablesecondarySkill);
        this->tablespell = (gcnew ironfist::NewDataSet::spellDataTable());
        __super::Tables->Add(this->tablespell);
        this->tableartifact = (gcnew ironfist::NewDataSet::artifactDataTable());
        __super::Tables->Add(this->tableartifact);
        ::System::Data::ForeignKeyConstraint^  fkc;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"map_hero", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablemap->map_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->map_IdColumn}));
        this->tablehero->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"hero_army", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablearmy->hero_IdColumn}));
        this->tablearmy->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"army_slot", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablearmy->army_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableslot->army_IdColumn}));
        this->tableslot->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"hero_secondarySkill", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesecondarySkill->hero_IdColumn}));
        this->tablesecondarySkill->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"hero_spell", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablespell->hero_IdColumn}));
        this->tablespell->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"hero_artifact", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableartifact->hero_IdColumn}));
        this->tableartifact->Constraints->Add(fkc);
        fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
        fkc->DeleteRule = ::System::Data::Rule::Cascade;
        fkc->UpdateRule = ::System::Data::Rule::Cascade;
        this->relationmap_hero = (gcnew ::System::Data::DataRelation(L"map_hero", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablemap->map_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->map_IdColumn}, false));
        this->relationmap_hero->Nested = true;
        this->Relations->Add(this->relationmap_hero);
        this->relationhero_army = (gcnew ::System::Data::DataRelation(L"hero_army", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablearmy->hero_IdColumn}, false));
        this->relationhero_army->Nested = true;
        this->Relations->Add(this->relationhero_army);
        this->relationarmy_slot = (gcnew ::System::Data::DataRelation(L"army_slot", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablearmy->army_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableslot->army_IdColumn}, false));
        this->relationarmy_slot->Nested = true;
        this->Relations->Add(this->relationarmy_slot);
        this->relationhero_secondarySkill = (gcnew ::System::Data::DataRelation(L"hero_secondarySkill", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablesecondarySkill->hero_IdColumn}, false));
        this->relationhero_secondarySkill->Nested = true;
        this->Relations->Add(this->relationhero_secondarySkill);
        this->relationhero_spell = (gcnew ::System::Data::DataRelation(L"hero_spell", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablespell->hero_IdColumn}, false));
        this->relationhero_spell->Nested = true;
        this->Relations->Add(this->relationhero_spell);
        this->relationhero_artifact = (gcnew ::System::Data::DataRelation(L"hero_artifact", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tablehero->hero_IdColumn}, 
            gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableartifact->hero_IdColumn}, false));
        this->relationhero_artifact->Nested = true;
        this->Relations->Add(this->relationhero_artifact);
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializemap() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializehero() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializearmy() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeslot() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializesecondarySkill() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializespell() {
        return false;
    }
    
    inline ::System::Boolean NewDataSet::ShouldSerializeartifact() {
        return false;
    }
    
    inline ::System::Void NewDataSet::SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e) {
        if (e->Action == ::System::ComponentModel::CollectionChangeAction::Remove) {
            this->InitVars();
        }
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ::System::Xml::Schema::XmlSchemaAny^  any = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any->Namespace = ds->Namespace;
        sequence->Items->Add(any);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::mapDataTable::mapDataTable() {
        this->TableName = L"map";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::mapDataTable::mapDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::mapDataTable::mapDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::mapDataTable::rawColumn::get() {
        return this->columnraw;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::mapDataTable::map_IdColumn::get() {
        return this->columnmap_Id;
    }
    
    inline ::System::Int32 NewDataSet::mapDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::mapRow^  NewDataSet::mapDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::mapRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::mapDataTable::AddmapRow(ironfist::NewDataSet::mapRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::mapRow^  NewDataSet::mapDataTable::AddmapRow(cli::array< System::Byte >^  raw) {
        ironfist::NewDataSet::mapRow^  rowmapRow = (cli::safe_cast<ironfist::NewDataSet::mapRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {raw, nullptr};
        rowmapRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowmapRow);
        return rowmapRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::mapDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::mapDataTable::Clone() {
        ironfist::NewDataSet::mapDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::mapDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::mapDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::mapDataTable());
    }
    
    inline ::System::Void NewDataSet::mapDataTable::InitVars() {
        this->columnraw = __super::Columns[L"raw"];
        this->columnmap_Id = __super::Columns[L"map_Id"];
    }
    
    inline ::System::Void NewDataSet::mapDataTable::InitClass() {
        this->columnraw = (gcnew ::System::Data::DataColumn(L"raw", cli::array< ::System::Byte >::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnraw);
        this->columnmap_Id = (gcnew ::System::Data::DataColumn(L"map_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnmap_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnmap_Id}, 
                true)));
        this->columnraw->AllowDBNull = false;
        this->columnmap_Id->AutoIncrement = true;
        this->columnmap_Id->AllowDBNull = false;
        this->columnmap_Id->Unique = true;
    }
    
    inline ironfist::NewDataSet::mapRow^  NewDataSet::mapDataTable::NewmapRow() {
        return (cli::safe_cast<ironfist::NewDataSet::mapRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::mapDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::mapRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::mapDataTable::GetRowType() {
        return ironfist::NewDataSet::mapRow::typeid;
    }
    
    inline ::System::Void NewDataSet::mapDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->mapRowChanged(this, (gcnew ironfist::NewDataSet::mapRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::mapDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->mapRowChanging(this, (gcnew ironfist::NewDataSet::mapRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::mapDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->mapRowDeleted(this, (gcnew ironfist::NewDataSet::mapRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::mapDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->mapRowDeleting(this, (gcnew ironfist::NewDataSet::mapRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::mapRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::mapDataTable::RemovemapRow(ironfist::NewDataSet::mapRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::mapDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"mapDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::heroDataTable::heroDataTable() {
        this->TableName = L"hero";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::heroDataTable::heroDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::heroDataTable::heroDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::spellpointsColumn::get() {
        return this->columnspellpoints;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::idxColumn::get() {
        return this->columnidx;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::ownerIdxColumn::get() {
        return this->columnownerIdx;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_4Column::get() {
        return this->columnfield_4;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_5Column::get() {
        return this->columnfield_5;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_6Column::get() {
        return this->columnfield_6;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_7Column::get() {
        return this->columnfield_7;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_8Column::get() {
        return this->columnfield_8;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_9Column::get() {
        return this->columnfield_9;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::nameColumn::get() {
        return this->columnname;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::factionIDColumn::get() {
        return this->columnfactionID;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::heroIDColumn::get() {
        return this->columnheroID;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::xColumn::get() {
        return this->columnx;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::yColumn::get() {
        return this->columny;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_21Column::get() {
        return this->columnfield_21;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_23Column::get() {
        return this->columnfield_23;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_25Column::get() {
        return this->columnfield_25;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_27Column::get() {
        return this->columnfield_27;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_29Column::get() {
        return this->columnfield_29;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_2BColumn::get() {
        return this->columnfield_2B;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::occupiedObjTypeColumn::get() {
        return this->columnoccupiedObjType;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::occupiedObjValColumn::get() {
        return this->columnoccupiedObjVal;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::mobilityColumn::get() {
        return this->columnmobility;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::remainingMobilityColumn::get() {
        return this->columnremainingMobility;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::experienceColumn::get() {
        return this->columnexperience;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::oldLevelColumn::get() {
        return this->columnoldLevel;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::attackColumn::get() {
        return this->columnattack;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::defenseColumn::get() {
        return this->columndefense;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::spellpowerColumn::get() {
        return this->columnspellpower;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::knowledgeColumn::get() {
        return this->columnknowledge;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_43Column::get() {
        return this->columnfield_43;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::tempMoraleBonusesColumn::get() {
        return this->columntempMoraleBonuses;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::tempLuckBonusesColumn::get() {
        return this->columntempLuckBonuses;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_46Column::get() {
        return this->columnfield_46;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::gazeboesVisitedColumn::get() {
        return this->columngazeboesVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::fortsVisitedColumn::get() {
        return this->columnfortsVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::witchDoctorHutsVisitedColumn::get() {
        return this->columnwitchDoctorHutsVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::mercenaryCampsVisitedColumn::get() {
        return this->columnmercenaryCampsVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::standingStonesVisitedColumn::get() {
        return this->columnstandingStonesVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::treesOfKnowledgeVisitedColumn::get() {
        return this->columntreesOfKnowledgeVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::xanadusVisitedColumn::get() {
        return this->columnxanadusVisited;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::randomSeedColumn::get() {
        return this->columnrandomSeed;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::wisdomLastOfferedColumn::get() {
        return this->columnwisdomLastOffered;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::flagsColumn::get() {
        return this->columnflags;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::isCaptainColumn::get() {
        return this->columnisCaptain;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::field_E8Column::get() {
        return this->columnfield_E8;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::hero_IdColumn::get() {
        return this->columnhero_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::heroDataTable::map_IdColumn::get() {
        return this->columnmap_Id;
    }
    
    inline ::System::Int32 NewDataSet::heroDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::heroDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::heroDataTable::AddheroRow(ironfist::NewDataSet::heroRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::heroDataTable::AddheroRow(
                System::Int32 spellpoints, 
                System::Int32 idx, 
                System::Int32 ownerIdx, 
                System::Int32 field_4, 
                System::Int32 field_5, 
                System::Int32 field_6, 
                System::Int32 field_7, 
                System::Int32 field_8, 
                System::Int32 field_9, 
                System::String^  name, 
                System::Int32 factionID, 
                System::Int32 heroID, 
                System::Int32 x, 
                System::Int32 y, 
                System::Int32 field_21, 
                System::Int32 field_23, 
                System::Int32 field_25, 
                System::Int32 field_27, 
                System::Int32 field_29, 
                System::Int32 field_2B, 
                System::Int32 occupiedObjType, 
                System::Int32 occupiedObjVal, 
                System::Int32 mobility, 
                System::Int32 remainingMobility, 
                System::Int32 experience, 
                System::Int32 oldLevel, 
                System::Int32 attack, 
                System::Int32 defense, 
                System::Int32 spellpower, 
                System::Int32 knowledge, 
                System::Int32 field_43, 
                System::Int32 tempMoraleBonuses, 
                System::Int32 tempLuckBonuses, 
                System::Int32 field_46, 
                System::Int32 gazeboesVisited, 
                System::Int32 fortsVisited, 
                System::Int32 witchDoctorHutsVisited, 
                System::Int32 mercenaryCampsVisited, 
                System::Int32 standingStonesVisited, 
                System::Int32 treesOfKnowledgeVisited, 
                System::Int32 xanadusVisited, 
                System::Int32 randomSeed, 
                System::Boolean wisdomLastOffered, 
                System::Int32 flags, 
                System::Boolean isCaptain, 
                System::Int32 field_E8, 
                ironfist::NewDataSet::mapRow^  parentmapRowBymap_hero) {
        ironfist::NewDataSet::heroRow^  rowheroRow = (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(48) {spellpoints, idx, ownerIdx, 
            field_4, field_5, field_6, field_7, field_8, field_9, name, factionID, heroID, x, y, field_21, field_23, field_25, field_27, 
            field_29, field_2B, occupiedObjType, occupiedObjVal, mobility, remainingMobility, experience, oldLevel, attack, defense, 
            spellpower, knowledge, field_43, tempMoraleBonuses, tempLuckBonuses, field_46, gazeboesVisited, fortsVisited, witchDoctorHutsVisited, 
            mercenaryCampsVisited, standingStonesVisited, treesOfKnowledgeVisited, xanadusVisited, randomSeed, wisdomLastOffered, flags, 
            isCaptain, field_E8, nullptr, nullptr};
        if (parentmapRowBymap_hero != nullptr) {
            columnValuesArray[47] = parentmapRowBymap_hero[1];
        }
        rowheroRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowheroRow);
        return rowheroRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::heroDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::heroDataTable::Clone() {
        ironfist::NewDataSet::heroDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::heroDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::heroDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::heroDataTable());
    }
    
    inline ::System::Void NewDataSet::heroDataTable::InitVars() {
        this->columnspellpoints = __super::Columns[L"spellpoints"];
        this->columnidx = __super::Columns[L"idx"];
        this->columnownerIdx = __super::Columns[L"ownerIdx"];
        this->columnfield_4 = __super::Columns[L"field_4"];
        this->columnfield_5 = __super::Columns[L"field_5"];
        this->columnfield_6 = __super::Columns[L"field_6"];
        this->columnfield_7 = __super::Columns[L"field_7"];
        this->columnfield_8 = __super::Columns[L"field_8"];
        this->columnfield_9 = __super::Columns[L"field_9"];
        this->columnname = __super::Columns[L"name"];
        this->columnfactionID = __super::Columns[L"factionID"];
        this->columnheroID = __super::Columns[L"heroID"];
        this->columnx = __super::Columns[L"x"];
        this->columny = __super::Columns[L"y"];
        this->columnfield_21 = __super::Columns[L"field_21"];
        this->columnfield_23 = __super::Columns[L"field_23"];
        this->columnfield_25 = __super::Columns[L"field_25"];
        this->columnfield_27 = __super::Columns[L"field_27"];
        this->columnfield_29 = __super::Columns[L"field_29"];
        this->columnfield_2B = __super::Columns[L"field_2B"];
        this->columnoccupiedObjType = __super::Columns[L"occupiedObjType"];
        this->columnoccupiedObjVal = __super::Columns[L"occupiedObjVal"];
        this->columnmobility = __super::Columns[L"mobility"];
        this->columnremainingMobility = __super::Columns[L"remainingMobility"];
        this->columnexperience = __super::Columns[L"experience"];
        this->columnoldLevel = __super::Columns[L"oldLevel"];
        this->columnattack = __super::Columns[L"attack"];
        this->columndefense = __super::Columns[L"defense"];
        this->columnspellpower = __super::Columns[L"spellpower"];
        this->columnknowledge = __super::Columns[L"knowledge"];
        this->columnfield_43 = __super::Columns[L"field_43"];
        this->columntempMoraleBonuses = __super::Columns[L"tempMoraleBonuses"];
        this->columntempLuckBonuses = __super::Columns[L"tempLuckBonuses"];
        this->columnfield_46 = __super::Columns[L"field_46"];
        this->columngazeboesVisited = __super::Columns[L"gazeboesVisited"];
        this->columnfortsVisited = __super::Columns[L"fortsVisited"];
        this->columnwitchDoctorHutsVisited = __super::Columns[L"witchDoctorHutsVisited"];
        this->columnmercenaryCampsVisited = __super::Columns[L"mercenaryCampsVisited"];
        this->columnstandingStonesVisited = __super::Columns[L"standingStonesVisited"];
        this->columntreesOfKnowledgeVisited = __super::Columns[L"treesOfKnowledgeVisited"];
        this->columnxanadusVisited = __super::Columns[L"xanadusVisited"];
        this->columnrandomSeed = __super::Columns[L"randomSeed"];
        this->columnwisdomLastOffered = __super::Columns[L"wisdomLastOffered"];
        this->columnflags = __super::Columns[L"flags"];
        this->columnisCaptain = __super::Columns[L"isCaptain"];
        this->columnfield_E8 = __super::Columns[L"field_E8"];
        this->columnhero_Id = __super::Columns[L"hero_Id"];
        this->columnmap_Id = __super::Columns[L"map_Id"];
    }
    
    inline ::System::Void NewDataSet::heroDataTable::InitClass() {
        this->columnspellpoints = (gcnew ::System::Data::DataColumn(L"spellpoints", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnspellpoints);
        this->columnidx = (gcnew ::System::Data::DataColumn(L"idx", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnidx);
        this->columnownerIdx = (gcnew ::System::Data::DataColumn(L"ownerIdx", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnownerIdx);
        this->columnfield_4 = (gcnew ::System::Data::DataColumn(L"field_4", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_4);
        this->columnfield_5 = (gcnew ::System::Data::DataColumn(L"field_5", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_5);
        this->columnfield_6 = (gcnew ::System::Data::DataColumn(L"field_6", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_6);
        this->columnfield_7 = (gcnew ::System::Data::DataColumn(L"field_7", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_7);
        this->columnfield_8 = (gcnew ::System::Data::DataColumn(L"field_8", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_8);
        this->columnfield_9 = (gcnew ::System::Data::DataColumn(L"field_9", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_9);
        this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnname);
        this->columnfactionID = (gcnew ::System::Data::DataColumn(L"factionID", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfactionID);
        this->columnheroID = (gcnew ::System::Data::DataColumn(L"heroID", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnheroID);
        this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnx);
        this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columny);
        this->columnfield_21 = (gcnew ::System::Data::DataColumn(L"field_21", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_21);
        this->columnfield_23 = (gcnew ::System::Data::DataColumn(L"field_23", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_23);
        this->columnfield_25 = (gcnew ::System::Data::DataColumn(L"field_25", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_25);
        this->columnfield_27 = (gcnew ::System::Data::DataColumn(L"field_27", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_27);
        this->columnfield_29 = (gcnew ::System::Data::DataColumn(L"field_29", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_29);
        this->columnfield_2B = (gcnew ::System::Data::DataColumn(L"field_2B", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_2B);
        this->columnoccupiedObjType = (gcnew ::System::Data::DataColumn(L"occupiedObjType", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnoccupiedObjType);
        this->columnoccupiedObjVal = (gcnew ::System::Data::DataColumn(L"occupiedObjVal", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnoccupiedObjVal);
        this->columnmobility = (gcnew ::System::Data::DataColumn(L"mobility", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnmobility);
        this->columnremainingMobility = (gcnew ::System::Data::DataColumn(L"remainingMobility", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnremainingMobility);
        this->columnexperience = (gcnew ::System::Data::DataColumn(L"experience", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnexperience);
        this->columnoldLevel = (gcnew ::System::Data::DataColumn(L"oldLevel", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnoldLevel);
        this->columnattack = (gcnew ::System::Data::DataColumn(L"attack", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnattack);
        this->columndefense = (gcnew ::System::Data::DataColumn(L"defense", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columndefense);
        this->columnspellpower = (gcnew ::System::Data::DataColumn(L"spellpower", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnspellpower);
        this->columnknowledge = (gcnew ::System::Data::DataColumn(L"knowledge", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnknowledge);
        this->columnfield_43 = (gcnew ::System::Data::DataColumn(L"field_43", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_43);
        this->columntempMoraleBonuses = (gcnew ::System::Data::DataColumn(L"tempMoraleBonuses", ::System::Int32::typeid, nullptr, 
            ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columntempMoraleBonuses);
        this->columntempLuckBonuses = (gcnew ::System::Data::DataColumn(L"tempLuckBonuses", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columntempLuckBonuses);
        this->columnfield_46 = (gcnew ::System::Data::DataColumn(L"field_46", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_46);
        this->columngazeboesVisited = (gcnew ::System::Data::DataColumn(L"gazeboesVisited", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columngazeboesVisited);
        this->columnfortsVisited = (gcnew ::System::Data::DataColumn(L"fortsVisited", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfortsVisited);
        this->columnwitchDoctorHutsVisited = (gcnew ::System::Data::DataColumn(L"witchDoctorHutsVisited", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnwitchDoctorHutsVisited);
        this->columnmercenaryCampsVisited = (gcnew ::System::Data::DataColumn(L"mercenaryCampsVisited", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnmercenaryCampsVisited);
        this->columnstandingStonesVisited = (gcnew ::System::Data::DataColumn(L"standingStonesVisited", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnstandingStonesVisited);
        this->columntreesOfKnowledgeVisited = (gcnew ::System::Data::DataColumn(L"treesOfKnowledgeVisited", ::System::Int32::typeid, 
            nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columntreesOfKnowledgeVisited);
        this->columnxanadusVisited = (gcnew ::System::Data::DataColumn(L"xanadusVisited", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnxanadusVisited);
        this->columnrandomSeed = (gcnew ::System::Data::DataColumn(L"randomSeed", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnrandomSeed);
        this->columnwisdomLastOffered = (gcnew ::System::Data::DataColumn(L"wisdomLastOffered", ::System::Boolean::typeid, nullptr, 
            ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnwisdomLastOffered);
        this->columnflags = (gcnew ::System::Data::DataColumn(L"flags", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnflags);
        this->columnisCaptain = (gcnew ::System::Data::DataColumn(L"isCaptain", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnisCaptain);
        this->columnfield_E8 = (gcnew ::System::Data::DataColumn(L"field_E8", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Element));
        __super::Columns->Add(this->columnfield_E8);
        this->columnhero_Id = (gcnew ::System::Data::DataColumn(L"hero_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnhero_Id);
        this->columnmap_Id = (gcnew ::System::Data::DataColumn(L"map_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnmap_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnhero_Id}, 
                true)));
        this->columnspellpoints->AllowDBNull = false;
        this->columnspellpoints->Namespace = L"";
        this->columnidx->AllowDBNull = false;
        this->columnidx->Namespace = L"";
        this->columnownerIdx->AllowDBNull = false;
        this->columnownerIdx->Namespace = L"";
        this->columnfield_4->AllowDBNull = false;
        this->columnfield_4->Namespace = L"";
        this->columnfield_5->AllowDBNull = false;
        this->columnfield_5->Namespace = L"";
        this->columnfield_6->AllowDBNull = false;
        this->columnfield_6->Namespace = L"";
        this->columnfield_7->AllowDBNull = false;
        this->columnfield_7->Namespace = L"";
        this->columnfield_8->AllowDBNull = false;
        this->columnfield_8->Namespace = L"";
        this->columnfield_9->AllowDBNull = false;
        this->columnfield_9->Namespace = L"";
        this->columnname->AllowDBNull = false;
        this->columnname->Namespace = L"";
        this->columnfactionID->AllowDBNull = false;
        this->columnfactionID->Namespace = L"";
        this->columnheroID->AllowDBNull = false;
        this->columnheroID->Namespace = L"";
        this->columnx->AllowDBNull = false;
        this->columnx->Namespace = L"";
        this->columny->AllowDBNull = false;
        this->columny->Namespace = L"";
        this->columnfield_21->AllowDBNull = false;
        this->columnfield_21->Namespace = L"";
        this->columnfield_23->AllowDBNull = false;
        this->columnfield_23->Namespace = L"";
        this->columnfield_25->AllowDBNull = false;
        this->columnfield_25->Namespace = L"";
        this->columnfield_27->AllowDBNull = false;
        this->columnfield_27->Namespace = L"";
        this->columnfield_29->AllowDBNull = false;
        this->columnfield_29->Namespace = L"";
        this->columnfield_2B->AllowDBNull = false;
        this->columnfield_2B->Namespace = L"";
        this->columnoccupiedObjType->AllowDBNull = false;
        this->columnoccupiedObjType->Namespace = L"";
        this->columnoccupiedObjVal->AllowDBNull = false;
        this->columnoccupiedObjVal->Namespace = L"";
        this->columnmobility->AllowDBNull = false;
        this->columnmobility->Namespace = L"";
        this->columnremainingMobility->AllowDBNull = false;
        this->columnremainingMobility->Namespace = L"";
        this->columnexperience->AllowDBNull = false;
        this->columnexperience->Namespace = L"";
        this->columnoldLevel->AllowDBNull = false;
        this->columnoldLevel->Namespace = L"";
        this->columnattack->AllowDBNull = false;
        this->columnattack->Namespace = L"";
        this->columndefense->AllowDBNull = false;
        this->columndefense->Namespace = L"";
        this->columnspellpower->AllowDBNull = false;
        this->columnspellpower->Namespace = L"";
        this->columnknowledge->AllowDBNull = false;
        this->columnknowledge->Namespace = L"";
        this->columnfield_43->AllowDBNull = false;
        this->columnfield_43->Namespace = L"";
        this->columntempMoraleBonuses->AllowDBNull = false;
        this->columntempMoraleBonuses->Namespace = L"";
        this->columntempLuckBonuses->AllowDBNull = false;
        this->columntempLuckBonuses->Namespace = L"";
        this->columnfield_46->AllowDBNull = false;
        this->columnfield_46->Namespace = L"";
        this->columngazeboesVisited->AllowDBNull = false;
        this->columngazeboesVisited->Namespace = L"";
        this->columnfortsVisited->AllowDBNull = false;
        this->columnfortsVisited->Namespace = L"";
        this->columnwitchDoctorHutsVisited->AllowDBNull = false;
        this->columnwitchDoctorHutsVisited->Namespace = L"";
        this->columnmercenaryCampsVisited->AllowDBNull = false;
        this->columnmercenaryCampsVisited->Namespace = L"";
        this->columnstandingStonesVisited->AllowDBNull = false;
        this->columnstandingStonesVisited->Namespace = L"";
        this->columntreesOfKnowledgeVisited->AllowDBNull = false;
        this->columntreesOfKnowledgeVisited->Namespace = L"";
        this->columnxanadusVisited->AllowDBNull = false;
        this->columnxanadusVisited->Namespace = L"";
        this->columnrandomSeed->AllowDBNull = false;
        this->columnrandomSeed->Namespace = L"";
        this->columnwisdomLastOffered->AllowDBNull = false;
        this->columnwisdomLastOffered->Namespace = L"";
        this->columnflags->AllowDBNull = false;
        this->columnflags->Namespace = L"";
        this->columnisCaptain->AllowDBNull = false;
        this->columnisCaptain->Namespace = L"";
        this->columnfield_E8->AllowDBNull = false;
        this->columnfield_E8->Namespace = L"";
        this->columnhero_Id->AutoIncrement = true;
        this->columnhero_Id->AllowDBNull = false;
        this->columnhero_Id->Unique = true;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::heroDataTable::NewheroRow() {
        return (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::heroDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::heroRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::heroDataTable::GetRowType() {
        return ironfist::NewDataSet::heroRow::typeid;
    }
    
    inline ::System::Void NewDataSet::heroDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->heroRowChanged(this, (gcnew ironfist::NewDataSet::heroRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::heroRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::heroDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->heroRowChanging(this, (gcnew ironfist::NewDataSet::heroRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::heroRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::heroDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->heroRowDeleted(this, (gcnew ironfist::NewDataSet::heroRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::heroRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::heroDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->heroRowDeleting(this, (gcnew ironfist::NewDataSet::heroRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::heroRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::heroDataTable::RemoveheroRow(ironfist::NewDataSet::heroRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::heroDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"heroDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::armyDataTable::armyDataTable() {
        this->TableName = L"army";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::armyDataTable::armyDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::armyDataTable::armyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::armyDataTable::army_IdColumn::get() {
        return this->columnarmy_Id;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::armyDataTable::hero_IdColumn::get() {
        return this->columnhero_Id;
    }
    
    inline ::System::Int32 NewDataSet::armyDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::armyRow^  NewDataSet::armyDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::armyRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::armyDataTable::AddarmyRow(ironfist::NewDataSet::armyRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::armyRow^  NewDataSet::armyDataTable::AddarmyRow(ironfist::NewDataSet::heroRow^  parentheroRowByhero_army) {
        ironfist::NewDataSet::armyRow^  rowarmyRow = (cli::safe_cast<ironfist::NewDataSet::armyRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
        if (parentheroRowByhero_army != nullptr) {
            columnValuesArray[1] = parentheroRowByhero_army[46];
        }
        rowarmyRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowarmyRow);
        return rowarmyRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::armyDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::armyDataTable::Clone() {
        ironfist::NewDataSet::armyDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::armyDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::armyDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::armyDataTable());
    }
    
    inline ::System::Void NewDataSet::armyDataTable::InitVars() {
        this->columnarmy_Id = __super::Columns[L"army_Id"];
        this->columnhero_Id = __super::Columns[L"hero_Id"];
    }
    
    inline ::System::Void NewDataSet::armyDataTable::InitClass() {
        this->columnarmy_Id = (gcnew ::System::Data::DataColumn(L"army_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnarmy_Id);
        this->columnhero_Id = (gcnew ::System::Data::DataColumn(L"hero_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnhero_Id);
        this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnarmy_Id}, 
                true)));
        this->columnarmy_Id->AutoIncrement = true;
        this->columnarmy_Id->AllowDBNull = false;
        this->columnarmy_Id->Unique = true;
    }
    
    inline ironfist::NewDataSet::armyRow^  NewDataSet::armyDataTable::NewarmyRow() {
        return (cli::safe_cast<ironfist::NewDataSet::armyRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::armyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::armyRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::armyDataTable::GetRowType() {
        return ironfist::NewDataSet::armyRow::typeid;
    }
    
    inline ::System::Void NewDataSet::armyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->armyRowChanged(this, (gcnew ironfist::NewDataSet::armyRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::armyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::armyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->armyRowChanging(this, (gcnew ironfist::NewDataSet::armyRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::armyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::armyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->armyRowDeleted(this, (gcnew ironfist::NewDataSet::armyRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::armyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::armyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->armyRowDeleting(this, (gcnew ironfist::NewDataSet::armyRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::armyRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::armyDataTable::RemovearmyRow(ironfist::NewDataSet::armyRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::armyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"armyDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::slotDataTable::slotDataTable() {
        this->TableName = L"slot";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::slotDataTable::slotDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::slotDataTable::slotDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::slotDataTable::idColumn::get() {
        return this->columnid;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::slotDataTable::quantityColumn::get() {
        return this->columnquantity;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::slotDataTable::army_IdColumn::get() {
        return this->columnarmy_Id;
    }
    
    inline ::System::Int32 NewDataSet::slotDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::slotRow^  NewDataSet::slotDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::slotRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::slotDataTable::AddslotRow(ironfist::NewDataSet::slotRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::slotRow^  NewDataSet::slotDataTable::AddslotRow(System::Int32 id, System::Int32 quantity, 
                ironfist::NewDataSet::armyRow^  parentarmyRowByarmy_slot) {
        ironfist::NewDataSet::slotRow^  rowslotRow = (cli::safe_cast<ironfist::NewDataSet::slotRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {id, quantity, nullptr};
        if (parentarmyRowByarmy_slot != nullptr) {
            columnValuesArray[2] = parentarmyRowByarmy_slot[0];
        }
        rowslotRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowslotRow);
        return rowslotRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::slotDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::slotDataTable::Clone() {
        ironfist::NewDataSet::slotDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::slotDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::slotDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::slotDataTable());
    }
    
    inline ::System::Void NewDataSet::slotDataTable::InitVars() {
        this->columnid = __super::Columns[L"id"];
        this->columnquantity = __super::Columns[L"quantity"];
        this->columnarmy_Id = __super::Columns[L"army_Id"];
    }
    
    inline ::System::Void NewDataSet::slotDataTable::InitClass() {
        this->columnid = (gcnew ::System::Data::DataColumn(L"id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnid);
        this->columnquantity = (gcnew ::System::Data::DataColumn(L"quantity", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnquantity);
        this->columnarmy_Id = (gcnew ::System::Data::DataColumn(L"army_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnarmy_Id);
        this->columnid->Namespace = L"";
        this->columnquantity->Namespace = L"";
        this->Namespace = L"";
    }
    
    inline ironfist::NewDataSet::slotRow^  NewDataSet::slotDataTable::NewslotRow() {
        return (cli::safe_cast<ironfist::NewDataSet::slotRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::slotDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::slotRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::slotDataTable::GetRowType() {
        return ironfist::NewDataSet::slotRow::typeid;
    }
    
    inline ::System::Void NewDataSet::slotDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->slotRowChanged(this, (gcnew ironfist::NewDataSet::slotRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::slotRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::slotDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->slotRowChanging(this, (gcnew ironfist::NewDataSet::slotRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::slotRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::slotDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->slotRowDeleted(this, (gcnew ironfist::NewDataSet::slotRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::slotRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::slotDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->slotRowDeleting(this, (gcnew ironfist::NewDataSet::slotRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::slotRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::slotDataTable::RemoveslotRow(ironfist::NewDataSet::slotRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::slotDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"slotDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::secondarySkillDataTable::secondarySkillDataTable() {
        this->TableName = L"secondarySkill";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::secondarySkillDataTable::secondarySkillDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::secondarySkillDataTable::secondarySkillDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
                ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::secondarySkillDataTable::idColumn::get() {
        return this->columnid;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::secondarySkillDataTable::levelColumn::get() {
        return this->columnlevel;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::secondarySkillDataTable::idxColumn::get() {
        return this->columnidx;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::secondarySkillDataTable::hero_IdColumn::get() {
        return this->columnhero_Id;
    }
    
    inline ::System::Int32 NewDataSet::secondarySkillDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::secondarySkillRow^  NewDataSet::secondarySkillDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::AddsecondarySkillRow(ironfist::NewDataSet::secondarySkillRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::secondarySkillRow^  NewDataSet::secondarySkillDataTable::AddsecondarySkillRow(System::Int32 id, 
                System::Int32 level, System::Int32 idx, ironfist::NewDataSet::heroRow^  parentheroRowByhero_secondarySkill) {
        ironfist::NewDataSet::secondarySkillRow^  rowsecondarySkillRow = (cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {id, level, idx, nullptr};
        if (parentheroRowByhero_secondarySkill != nullptr) {
            columnValuesArray[3] = parentheroRowByhero_secondarySkill[46];
        }
        rowsecondarySkillRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowsecondarySkillRow);
        return rowsecondarySkillRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::secondarySkillDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::secondarySkillDataTable::Clone() {
        ironfist::NewDataSet::secondarySkillDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::secondarySkillDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::secondarySkillDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::secondarySkillDataTable());
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::InitVars() {
        this->columnid = __super::Columns[L"id"];
        this->columnlevel = __super::Columns[L"level"];
        this->columnidx = __super::Columns[L"idx"];
        this->columnhero_Id = __super::Columns[L"hero_Id"];
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::InitClass() {
        this->columnid = (gcnew ::System::Data::DataColumn(L"id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnid);
        this->columnlevel = (gcnew ::System::Data::DataColumn(L"level", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnlevel);
        this->columnidx = (gcnew ::System::Data::DataColumn(L"idx", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnidx);
        this->columnhero_Id = (gcnew ::System::Data::DataColumn(L"hero_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnhero_Id);
        this->columnid->Namespace = L"";
        this->columnlevel->Namespace = L"";
        this->columnidx->Namespace = L"";
        this->Namespace = L"";
    }
    
    inline ironfist::NewDataSet::secondarySkillRow^  NewDataSet::secondarySkillDataTable::NewsecondarySkillRow() {
        return (cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::secondarySkillDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::secondarySkillRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::secondarySkillDataTable::GetRowType() {
        return ironfist::NewDataSet::secondarySkillRow::typeid;
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->secondarySkillRowChanged(this, (gcnew ironfist::NewDataSet::secondarySkillRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->secondarySkillRowChanging(this, (gcnew ironfist::NewDataSet::secondarySkillRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->secondarySkillRowDeleted(this, (gcnew ironfist::NewDataSet::secondarySkillRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->secondarySkillRowDeleting(this, (gcnew ironfist::NewDataSet::secondarySkillRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::secondarySkillRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::secondarySkillDataTable::RemovesecondarySkillRow(ironfist::NewDataSet::secondarySkillRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::secondarySkillDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"secondarySkillDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::spellDataTable::spellDataTable() {
        this->TableName = L"spell";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::spellDataTable::spellDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::spellDataTable::spellDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::spellDataTable::spell_ColumnColumn::get() {
        return this->columnspell_Column;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::spellDataTable::hero_IdColumn::get() {
        return this->columnhero_Id;
    }
    
    inline ::System::Int32 NewDataSet::spellDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::spellRow^  NewDataSet::spellDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::spellRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::spellDataTable::AddspellRow(ironfist::NewDataSet::spellRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::spellRow^  NewDataSet::spellDataTable::AddspellRow(System::Int32 spell_Column, ironfist::NewDataSet::heroRow^  parentheroRowByhero_spell) {
        ironfist::NewDataSet::spellRow^  rowspellRow = (cli::safe_cast<ironfist::NewDataSet::spellRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {spell_Column, nullptr};
        if (parentheroRowByhero_spell != nullptr) {
            columnValuesArray[1] = parentheroRowByhero_spell[46];
        }
        rowspellRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowspellRow);
        return rowspellRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::spellDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::spellDataTable::Clone() {
        ironfist::NewDataSet::spellDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::spellDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::spellDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::spellDataTable());
    }
    
    inline ::System::Void NewDataSet::spellDataTable::InitVars() {
        this->columnspell_Column = __super::Columns[L"spell_Column"];
        this->columnhero_Id = __super::Columns[L"hero_Id"];
    }
    
    inline ::System::Void NewDataSet::spellDataTable::InitClass() {
        this->columnspell_Column = (gcnew ::System::Data::DataColumn(L"spell_Column", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::SimpleContent));
        __super::Columns->Add(this->columnspell_Column);
        this->columnhero_Id = (gcnew ::System::Data::DataColumn(L"hero_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnhero_Id);
        this->Namespace = L"";
    }
    
    inline ironfist::NewDataSet::spellRow^  NewDataSet::spellDataTable::NewspellRow() {
        return (cli::safe_cast<ironfist::NewDataSet::spellRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::spellDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::spellRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::spellDataTable::GetRowType() {
        return ironfist::NewDataSet::spellRow::typeid;
    }
    
    inline ::System::Void NewDataSet::spellDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->spellRowChanged(this, (gcnew ironfist::NewDataSet::spellRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::spellRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::spellDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->spellRowChanging(this, (gcnew ironfist::NewDataSet::spellRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::spellRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::spellDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->spellRowDeleted(this, (gcnew ironfist::NewDataSet::spellRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::spellRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::spellDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->spellRowDeleting(this, (gcnew ironfist::NewDataSet::spellRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::spellRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::spellDataTable::RemovespellRow(ironfist::NewDataSet::spellRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::spellDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"spellDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::artifactDataTable::artifactDataTable() {
        this->TableName = L"artifact";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline NewDataSet::artifactDataTable::artifactDataTable(::System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline NewDataSet::artifactDataTable::artifactDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
            ::System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::artifactDataTable::idColumn::get() {
        return this->columnid;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::artifactDataTable::spellColumn::get() {
        return this->columnspell;
    }
    
    inline ::System::Data::DataColumn^  NewDataSet::artifactDataTable::hero_IdColumn::get() {
        return this->columnhero_Id;
    }
    
    inline ::System::Int32 NewDataSet::artifactDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline ironfist::NewDataSet::artifactRow^  NewDataSet::artifactDataTable::default::get(::System::Int32 index) {
        return (cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(this->Rows[index]));
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::AddartifactRow(ironfist::NewDataSet::artifactRow^  row) {
        this->Rows->Add(row);
    }
    
    inline ironfist::NewDataSet::artifactRow^  NewDataSet::artifactDataTable::AddartifactRow(System::Int32 id, System::Int32 spell, 
                ironfist::NewDataSet::heroRow^  parentheroRowByhero_artifact) {
        ironfist::NewDataSet::artifactRow^  rowartifactRow = (cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(this->NewRow()));
        cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {id, spell, nullptr};
        if (parentheroRowByhero_artifact != nullptr) {
            columnValuesArray[2] = parentheroRowByhero_artifact[46];
        }
        rowartifactRow->ItemArray = columnValuesArray;
        this->Rows->Add(rowartifactRow);
        return rowartifactRow;
    }
    
    inline ::System::Collections::IEnumerator^  NewDataSet::artifactDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline ::System::Data::DataTable^  NewDataSet::artifactDataTable::Clone() {
        ironfist::NewDataSet::artifactDataTable^  cln = (cli::safe_cast<ironfist::NewDataSet::artifactDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline ::System::Data::DataTable^  NewDataSet::artifactDataTable::CreateInstance() {
        return (gcnew ironfist::NewDataSet::artifactDataTable());
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::InitVars() {
        this->columnid = __super::Columns[L"id"];
        this->columnspell = __super::Columns[L"spell"];
        this->columnhero_Id = __super::Columns[L"hero_Id"];
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::InitClass() {
        this->columnid = (gcnew ::System::Data::DataColumn(L"id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnid);
        this->columnspell = (gcnew ::System::Data::DataColumn(L"spell", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
        __super::Columns->Add(this->columnspell);
        this->columnhero_Id = (gcnew ::System::Data::DataColumn(L"hero_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
        __super::Columns->Add(this->columnhero_Id);
        this->columnid->AllowDBNull = false;
        this->columnid->Namespace = L"";
        this->columnspell->Namespace = L"";
        this->columnspell->DefaultValue = static_cast<System::Int32>(-1);
        this->Namespace = L"";
    }
    
    inline ironfist::NewDataSet::artifactRow^  NewDataSet::artifactDataTable::NewartifactRow() {
        return (cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(this->NewRow()));
    }
    
    inline ::System::Data::DataRow^  NewDataSet::artifactDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
        return (gcnew ironfist::NewDataSet::artifactRow(builder));
    }
    
    inline ::System::Type^  NewDataSet::artifactDataTable::GetRowType() {
        return ironfist::NewDataSet::artifactRow::typeid;
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->artifactRowChanged(this, (gcnew ironfist::NewDataSet::artifactRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->artifactRowChanging(this, (gcnew ironfist::NewDataSet::artifactRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->artifactRowDeleted(this, (gcnew ironfist::NewDataSet::artifactRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->artifactRowDeleting(this, (gcnew ironfist::NewDataSet::artifactRowChangeEvent((cli::safe_cast<ironfist::NewDataSet::artifactRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline ::System::Void NewDataSet::artifactDataTable::RemoveartifactRow(ironfist::NewDataSet::artifactRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::artifactDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
        ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
        ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
        ironfist::NewDataSet^  ds = (gcnew ironfist::NewDataSet());
        ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = ::System::Decimal(0);
        any1->MaxOccurs = ::System::Decimal::MaxValue;
        any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = ::System::Decimal(1);
        any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"artifactDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
        if (xs->Contains(dsSchema->TargetNamespace)) {
            ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
            ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
            try {
                ::System::Xml::Schema::XmlSchema^  schema = nullptr;
                dsSchema->Write(s1);
                for (                ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();                 ) {
                    schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                    s2->SetLength(0);
                    schema->Write(s2);
                    if (s1->Length == s2->Length) {
                        s1->Position = 0;
                        s2->Position = 0;
                        for (                        ; ((s1->Position != s1->Length) 
                                    && (s1->ReadByte() == s2->ReadByte()));                         ) {
                            ;
                        }
                        if (s1->Position == s1->Length) {
                            return type;
                        }
                    }
                }
            }
            finally {
                if (s1 != nullptr) {
                    s1->Close();
                }
                if (s2 != nullptr) {
                    s2->Close();
                }
            }
        }
        xs->Add(dsSchema);
        return type;
    }
    
    
    inline NewDataSet::mapRow::mapRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablemap = (cli::safe_cast<ironfist::NewDataSet::mapDataTable^  >(this->Table));
    }
    
    inline cli::array< System::Byte >^  NewDataSet::mapRow::raw::get() {
        return (cli::safe_cast<cli::array< ::System::Byte >^  >(this[this->tablemap->rawColumn]));
    }
    inline System::Void NewDataSet::mapRow::raw::set(cli::array< System::Byte >^  value) {
        this[this->tablemap->rawColumn] = value;
    }
    
    inline System::Int32 NewDataSet::mapRow::map_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablemap->map_IdColumn]));
    }
    inline System::Void NewDataSet::mapRow::map_Id::set(System::Int32 value) {
        this[this->tablemap->map_IdColumn] = value;
    }
    
    inline cli::array< ironfist::NewDataSet::heroRow^  >^  NewDataSet::mapRow::GetheroRows() {
        if (this->Table->ChildRelations[L"map_hero"] == nullptr) {
            return gcnew cli::array< ironfist::NewDataSet::heroRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< ironfist::NewDataSet::heroRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"map_hero"])));
        }
    }
    
    
    inline NewDataSet::heroRow::heroRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablehero = (cli::safe_cast<ironfist::NewDataSet::heroDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::heroRow::spellpoints::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->spellpointsColumn]));
    }
    inline System::Void NewDataSet::heroRow::spellpoints::set(System::Int32 value) {
        this[this->tablehero->spellpointsColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::idx::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->idxColumn]));
    }
    inline System::Void NewDataSet::heroRow::idx::set(System::Int32 value) {
        this[this->tablehero->idxColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::ownerIdx::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->ownerIdxColumn]));
    }
    inline System::Void NewDataSet::heroRow::ownerIdx::set(System::Int32 value) {
        this[this->tablehero->ownerIdxColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_4::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_4Column]));
    }
    inline System::Void NewDataSet::heroRow::field_4::set(System::Int32 value) {
        this[this->tablehero->field_4Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_5::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_5Column]));
    }
    inline System::Void NewDataSet::heroRow::field_5::set(System::Int32 value) {
        this[this->tablehero->field_5Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_6::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_6Column]));
    }
    inline System::Void NewDataSet::heroRow::field_6::set(System::Int32 value) {
        this[this->tablehero->field_6Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_7::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_7Column]));
    }
    inline System::Void NewDataSet::heroRow::field_7::set(System::Int32 value) {
        this[this->tablehero->field_7Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_8::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_8Column]));
    }
    inline System::Void NewDataSet::heroRow::field_8::set(System::Int32 value) {
        this[this->tablehero->field_8Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_9::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_9Column]));
    }
    inline System::Void NewDataSet::heroRow::field_9::set(System::Int32 value) {
        this[this->tablehero->field_9Column] = value;
    }
    
    inline System::String^  NewDataSet::heroRow::name::get() {
        return (cli::safe_cast<::System::String^  >(this[this->tablehero->nameColumn]));
    }
    inline System::Void NewDataSet::heroRow::name::set(System::String^  value) {
        this[this->tablehero->nameColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::factionID::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->factionIDColumn]));
    }
    inline System::Void NewDataSet::heroRow::factionID::set(System::Int32 value) {
        this[this->tablehero->factionIDColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::heroID::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->heroIDColumn]));
    }
    inline System::Void NewDataSet::heroRow::heroID::set(System::Int32 value) {
        this[this->tablehero->heroIDColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::x::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->xColumn]));
    }
    inline System::Void NewDataSet::heroRow::x::set(System::Int32 value) {
        this[this->tablehero->xColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::y::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->yColumn]));
    }
    inline System::Void NewDataSet::heroRow::y::set(System::Int32 value) {
        this[this->tablehero->yColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_21::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_21Column]));
    }
    inline System::Void NewDataSet::heroRow::field_21::set(System::Int32 value) {
        this[this->tablehero->field_21Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_23::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_23Column]));
    }
    inline System::Void NewDataSet::heroRow::field_23::set(System::Int32 value) {
        this[this->tablehero->field_23Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_25::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_25Column]));
    }
    inline System::Void NewDataSet::heroRow::field_25::set(System::Int32 value) {
        this[this->tablehero->field_25Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_27::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_27Column]));
    }
    inline System::Void NewDataSet::heroRow::field_27::set(System::Int32 value) {
        this[this->tablehero->field_27Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_29::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_29Column]));
    }
    inline System::Void NewDataSet::heroRow::field_29::set(System::Int32 value) {
        this[this->tablehero->field_29Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_2B::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_2BColumn]));
    }
    inline System::Void NewDataSet::heroRow::field_2B::set(System::Int32 value) {
        this[this->tablehero->field_2BColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::occupiedObjType::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->occupiedObjTypeColumn]));
    }
    inline System::Void NewDataSet::heroRow::occupiedObjType::set(System::Int32 value) {
        this[this->tablehero->occupiedObjTypeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::occupiedObjVal::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->occupiedObjValColumn]));
    }
    inline System::Void NewDataSet::heroRow::occupiedObjVal::set(System::Int32 value) {
        this[this->tablehero->occupiedObjValColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::mobility::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->mobilityColumn]));
    }
    inline System::Void NewDataSet::heroRow::mobility::set(System::Int32 value) {
        this[this->tablehero->mobilityColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::remainingMobility::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->remainingMobilityColumn]));
    }
    inline System::Void NewDataSet::heroRow::remainingMobility::set(System::Int32 value) {
        this[this->tablehero->remainingMobilityColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::experience::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->experienceColumn]));
    }
    inline System::Void NewDataSet::heroRow::experience::set(System::Int32 value) {
        this[this->tablehero->experienceColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::oldLevel::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->oldLevelColumn]));
    }
    inline System::Void NewDataSet::heroRow::oldLevel::set(System::Int32 value) {
        this[this->tablehero->oldLevelColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::attack::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->attackColumn]));
    }
    inline System::Void NewDataSet::heroRow::attack::set(System::Int32 value) {
        this[this->tablehero->attackColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::defense::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->defenseColumn]));
    }
    inline System::Void NewDataSet::heroRow::defense::set(System::Int32 value) {
        this[this->tablehero->defenseColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::spellpower::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->spellpowerColumn]));
    }
    inline System::Void NewDataSet::heroRow::spellpower::set(System::Int32 value) {
        this[this->tablehero->spellpowerColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::knowledge::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->knowledgeColumn]));
    }
    inline System::Void NewDataSet::heroRow::knowledge::set(System::Int32 value) {
        this[this->tablehero->knowledgeColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_43::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_43Column]));
    }
    inline System::Void NewDataSet::heroRow::field_43::set(System::Int32 value) {
        this[this->tablehero->field_43Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::tempMoraleBonuses::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->tempMoraleBonusesColumn]));
    }
    inline System::Void NewDataSet::heroRow::tempMoraleBonuses::set(System::Int32 value) {
        this[this->tablehero->tempMoraleBonusesColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::tempLuckBonuses::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->tempLuckBonusesColumn]));
    }
    inline System::Void NewDataSet::heroRow::tempLuckBonuses::set(System::Int32 value) {
        this[this->tablehero->tempLuckBonusesColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_46::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_46Column]));
    }
    inline System::Void NewDataSet::heroRow::field_46::set(System::Int32 value) {
        this[this->tablehero->field_46Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::gazeboesVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->gazeboesVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::gazeboesVisited::set(System::Int32 value) {
        this[this->tablehero->gazeboesVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::fortsVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->fortsVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::fortsVisited::set(System::Int32 value) {
        this[this->tablehero->fortsVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::witchDoctorHutsVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->witchDoctorHutsVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::witchDoctorHutsVisited::set(System::Int32 value) {
        this[this->tablehero->witchDoctorHutsVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::mercenaryCampsVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->mercenaryCampsVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::mercenaryCampsVisited::set(System::Int32 value) {
        this[this->tablehero->mercenaryCampsVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::standingStonesVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->standingStonesVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::standingStonesVisited::set(System::Int32 value) {
        this[this->tablehero->standingStonesVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::treesOfKnowledgeVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->treesOfKnowledgeVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::treesOfKnowledgeVisited::set(System::Int32 value) {
        this[this->tablehero->treesOfKnowledgeVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::xanadusVisited::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->xanadusVisitedColumn]));
    }
    inline System::Void NewDataSet::heroRow::xanadusVisited::set(System::Int32 value) {
        this[this->tablehero->xanadusVisitedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::randomSeed::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->randomSeedColumn]));
    }
    inline System::Void NewDataSet::heroRow::randomSeed::set(System::Int32 value) {
        this[this->tablehero->randomSeedColumn] = value;
    }
    
    inline System::Boolean NewDataSet::heroRow::wisdomLastOffered::get() {
        return (cli::safe_cast<::System::Boolean >(this[this->tablehero->wisdomLastOfferedColumn]));
    }
    inline System::Void NewDataSet::heroRow::wisdomLastOffered::set(System::Boolean value) {
        this[this->tablehero->wisdomLastOfferedColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::flags::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->flagsColumn]));
    }
    inline System::Void NewDataSet::heroRow::flags::set(System::Int32 value) {
        this[this->tablehero->flagsColumn] = value;
    }
    
    inline System::Boolean NewDataSet::heroRow::isCaptain::get() {
        return (cli::safe_cast<::System::Boolean >(this[this->tablehero->isCaptainColumn]));
    }
    inline System::Void NewDataSet::heroRow::isCaptain::set(System::Boolean value) {
        this[this->tablehero->isCaptainColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::field_E8::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->field_E8Column]));
    }
    inline System::Void NewDataSet::heroRow::field_E8::set(System::Int32 value) {
        this[this->tablehero->field_E8Column] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::hero_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablehero->hero_IdColumn]));
    }
    inline System::Void NewDataSet::heroRow::hero_Id::set(System::Int32 value) {
        this[this->tablehero->hero_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::heroRow::map_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablehero->map_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'map_Id\' in table \'hero\' is DBNull.", e));
        }
    }
    inline System::Void NewDataSet::heroRow::map_Id::set(System::Int32 value) {
        this[this->tablehero->map_IdColumn] = value;
    }
    
    inline ironfist::NewDataSet::mapRow^  NewDataSet::heroRow::mapRow::get() {
        return (cli::safe_cast<ironfist::NewDataSet::mapRow^  >(this->GetParentRow(this->Table->ParentRelations[L"map_hero"])));
    }
    inline System::Void NewDataSet::heroRow::mapRow::set(ironfist::NewDataSet::mapRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"map_hero"]);
    }
    
    inline ::System::Boolean NewDataSet::heroRow::Ismap_IdNull() {
        return this->IsNull(this->tablehero->map_IdColumn);
    }
    
    inline ::System::Void NewDataSet::heroRow::Setmap_IdNull() {
        this[this->tablehero->map_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< ironfist::NewDataSet::armyRow^  >^  NewDataSet::heroRow::GetarmyRows() {
        if (this->Table->ChildRelations[L"hero_army"] == nullptr) {
            return gcnew cli::array< ironfist::NewDataSet::armyRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< ironfist::NewDataSet::armyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"hero_army"])));
        }
    }
    
    inline cli::array< ironfist::NewDataSet::secondarySkillRow^  >^  NewDataSet::heroRow::GetsecondarySkillRows() {
        if (this->Table->ChildRelations[L"hero_secondarySkill"] == nullptr) {
            return gcnew cli::array< ironfist::NewDataSet::secondarySkillRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< ironfist::NewDataSet::secondarySkillRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"hero_secondarySkill"])));
        }
    }
    
    inline cli::array< ironfist::NewDataSet::spellRow^  >^  NewDataSet::heroRow::GetspellRows() {
        if (this->Table->ChildRelations[L"hero_spell"] == nullptr) {
            return gcnew cli::array< ironfist::NewDataSet::spellRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< ironfist::NewDataSet::spellRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"hero_spell"])));
        }
    }
    
    inline cli::array< ironfist::NewDataSet::artifactRow^  >^  NewDataSet::heroRow::GetartifactRows() {
        if (this->Table->ChildRelations[L"hero_artifact"] == nullptr) {
            return gcnew cli::array< ironfist::NewDataSet::artifactRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< ironfist::NewDataSet::artifactRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"hero_artifact"])));
        }
    }
    
    
    inline NewDataSet::armyRow::armyRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablearmy = (cli::safe_cast<ironfist::NewDataSet::armyDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::armyRow::army_Id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tablearmy->army_IdColumn]));
    }
    inline System::Void NewDataSet::armyRow::army_Id::set(System::Int32 value) {
        this[this->tablearmy->army_IdColumn] = value;
    }
    
    inline System::Int32 NewDataSet::armyRow::hero_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablearmy->hero_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'hero_Id\' in table \'army\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::armyRow::hero_Id::set(System::Int32 value) {
        this[this->tablearmy->hero_IdColumn] = value;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::armyRow::heroRow::get() {
        return (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->GetParentRow(this->Table->ParentRelations[L"hero_army"])));
    }
    inline System::Void NewDataSet::armyRow::heroRow::set(ironfist::NewDataSet::heroRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"hero_army"]);
    }
    
    inline ::System::Boolean NewDataSet::armyRow::Ishero_IdNull() {
        return this->IsNull(this->tablearmy->hero_IdColumn);
    }
    
    inline ::System::Void NewDataSet::armyRow::Sethero_IdNull() {
        this[this->tablearmy->hero_IdColumn] = ::System::Convert::DBNull;
    }
    
    inline cli::array< ironfist::NewDataSet::slotRow^  >^  NewDataSet::armyRow::GetslotRows() {
        if (this->Table->ChildRelations[L"army_slot"] == nullptr) {
            return gcnew cli::array< ironfist::NewDataSet::slotRow^  >(0);
        }
        else {
            return (cli::safe_cast<cli::array< ironfist::NewDataSet::slotRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"army_slot"])));
        }
    }
    
    
    inline NewDataSet::slotRow::slotRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableslot = (cli::safe_cast<ironfist::NewDataSet::slotDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::slotRow::id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableslot->idColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'id\' in table \'slot\' is DBNull.", e));
        }
    }
    inline System::Void NewDataSet::slotRow::id::set(System::Int32 value) {
        this[this->tableslot->idColumn] = value;
    }
    
    inline System::Int32 NewDataSet::slotRow::quantity::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableslot->quantityColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'quantity\' in table \'slot\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::slotRow::quantity::set(System::Int32 value) {
        this[this->tableslot->quantityColumn] = value;
    }
    
    inline System::Int32 NewDataSet::slotRow::army_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableslot->army_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'army_Id\' in table \'slot\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::slotRow::army_Id::set(System::Int32 value) {
        this[this->tableslot->army_IdColumn] = value;
    }
    
    inline ironfist::NewDataSet::armyRow^  NewDataSet::slotRow::armyRow::get() {
        return (cli::safe_cast<ironfist::NewDataSet::armyRow^  >(this->GetParentRow(this->Table->ParentRelations[L"army_slot"])));
    }
    inline System::Void NewDataSet::slotRow::armyRow::set(ironfist::NewDataSet::armyRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"army_slot"]);
    }
    
    inline ::System::Boolean NewDataSet::slotRow::IsidNull() {
        return this->IsNull(this->tableslot->idColumn);
    }
    
    inline ::System::Void NewDataSet::slotRow::SetidNull() {
        this[this->tableslot->idColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::slotRow::IsquantityNull() {
        return this->IsNull(this->tableslot->quantityColumn);
    }
    
    inline ::System::Void NewDataSet::slotRow::SetquantityNull() {
        this[this->tableslot->quantityColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::slotRow::Isarmy_IdNull() {
        return this->IsNull(this->tableslot->army_IdColumn);
    }
    
    inline ::System::Void NewDataSet::slotRow::Setarmy_IdNull() {
        this[this->tableslot->army_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::secondarySkillRow::secondarySkillRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablesecondarySkill = (cli::safe_cast<ironfist::NewDataSet::secondarySkillDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::secondarySkillRow::id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablesecondarySkill->idColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'id\' in table \'secondarySkill\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::secondarySkillRow::id::set(System::Int32 value) {
        this[this->tablesecondarySkill->idColumn] = value;
    }
    
    inline System::Int32 NewDataSet::secondarySkillRow::level::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablesecondarySkill->levelColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'level\' in table \'secondarySkill\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::secondarySkillRow::level::set(System::Int32 value) {
        this[this->tablesecondarySkill->levelColumn] = value;
    }
    
    inline System::Int32 NewDataSet::secondarySkillRow::idx::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablesecondarySkill->idxColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'idx\' in table \'secondarySkill\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::secondarySkillRow::idx::set(System::Int32 value) {
        this[this->tablesecondarySkill->idxColumn] = value;
    }
    
    inline System::Int32 NewDataSet::secondarySkillRow::hero_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablesecondarySkill->hero_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'hero_Id\' in table \'secondarySkill\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::secondarySkillRow::hero_Id::set(System::Int32 value) {
        this[this->tablesecondarySkill->hero_IdColumn] = value;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::secondarySkillRow::heroRow::get() {
        return (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->GetParentRow(this->Table->ParentRelations[L"hero_secondarySkill"])));
    }
    inline System::Void NewDataSet::secondarySkillRow::heroRow::set(ironfist::NewDataSet::heroRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"hero_secondarySkill"]);
    }
    
    inline ::System::Boolean NewDataSet::secondarySkillRow::IsidNull() {
        return this->IsNull(this->tablesecondarySkill->idColumn);
    }
    
    inline ::System::Void NewDataSet::secondarySkillRow::SetidNull() {
        this[this->tablesecondarySkill->idColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::secondarySkillRow::IslevelNull() {
        return this->IsNull(this->tablesecondarySkill->levelColumn);
    }
    
    inline ::System::Void NewDataSet::secondarySkillRow::SetlevelNull() {
        this[this->tablesecondarySkill->levelColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::secondarySkillRow::IsidxNull() {
        return this->IsNull(this->tablesecondarySkill->idxColumn);
    }
    
    inline ::System::Void NewDataSet::secondarySkillRow::SetidxNull() {
        this[this->tablesecondarySkill->idxColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::secondarySkillRow::Ishero_IdNull() {
        return this->IsNull(this->tablesecondarySkill->hero_IdColumn);
    }
    
    inline ::System::Void NewDataSet::secondarySkillRow::Sethero_IdNull() {
        this[this->tablesecondarySkill->hero_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::spellRow::spellRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tablespell = (cli::safe_cast<ironfist::NewDataSet::spellDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::spellRow::spell_Column::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablespell->spell_ColumnColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'spell_Column\' in table \'spell\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::spellRow::spell_Column::set(System::Int32 value) {
        this[this->tablespell->spell_ColumnColumn] = value;
    }
    
    inline System::Int32 NewDataSet::spellRow::hero_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tablespell->hero_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'hero_Id\' in table \'spell\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::spellRow::hero_Id::set(System::Int32 value) {
        this[this->tablespell->hero_IdColumn] = value;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::spellRow::heroRow::get() {
        return (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->GetParentRow(this->Table->ParentRelations[L"hero_spell"])));
    }
    inline System::Void NewDataSet::spellRow::heroRow::set(ironfist::NewDataSet::heroRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"hero_spell"]);
    }
    
    inline ::System::Boolean NewDataSet::spellRow::Isspell_ColumnNull() {
        return this->IsNull(this->tablespell->spell_ColumnColumn);
    }
    
    inline ::System::Void NewDataSet::spellRow::Setspell_ColumnNull() {
        this[this->tablespell->spell_ColumnColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::spellRow::Ishero_IdNull() {
        return this->IsNull(this->tablespell->hero_IdColumn);
    }
    
    inline ::System::Void NewDataSet::spellRow::Sethero_IdNull() {
        this[this->tablespell->hero_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::artifactRow::artifactRow(::System::Data::DataRowBuilder^  rb) : 
            ::System::Data::DataRow(rb) {
        this->tableartifact = (cli::safe_cast<ironfist::NewDataSet::artifactDataTable^  >(this->Table));
    }
    
    inline System::Int32 NewDataSet::artifactRow::id::get() {
        return (cli::safe_cast<::System::Int32 >(this[this->tableartifact->idColumn]));
    }
    inline System::Void NewDataSet::artifactRow::id::set(System::Int32 value) {
        this[this->tableartifact->idColumn] = value;
    }
    
    inline System::Int32 NewDataSet::artifactRow::spell::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableartifact->spellColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'spell\' in table \'artifact\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::artifactRow::spell::set(System::Int32 value) {
        this[this->tableartifact->spellColumn] = value;
    }
    
    inline System::Int32 NewDataSet::artifactRow::hero_Id::get() {
        try {
            return (cli::safe_cast<::System::Int32 >(this[this->tableartifact->hero_IdColumn]));
        }
        catch (::System::InvalidCastException^ e) {
            throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'hero_Id\' in table \'artifact\' is DBNull.", 
                e));
        }
    }
    inline System::Void NewDataSet::artifactRow::hero_Id::set(System::Int32 value) {
        this[this->tableartifact->hero_IdColumn] = value;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::artifactRow::heroRow::get() {
        return (cli::safe_cast<ironfist::NewDataSet::heroRow^  >(this->GetParentRow(this->Table->ParentRelations[L"hero_artifact"])));
    }
    inline System::Void NewDataSet::artifactRow::heroRow::set(ironfist::NewDataSet::heroRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"hero_artifact"]);
    }
    
    inline ::System::Boolean NewDataSet::artifactRow::IsspellNull() {
        return this->IsNull(this->tableartifact->spellColumn);
    }
    
    inline ::System::Void NewDataSet::artifactRow::SetspellNull() {
        this[this->tableartifact->spellColumn] = ::System::Convert::DBNull;
    }
    
    inline ::System::Boolean NewDataSet::artifactRow::Ishero_IdNull() {
        return this->IsNull(this->tableartifact->hero_IdColumn);
    }
    
    inline ::System::Void NewDataSet::artifactRow::Sethero_IdNull() {
        this[this->tableartifact->hero_IdColumn] = ::System::Convert::DBNull;
    }
    
    
    inline NewDataSet::mapRowChangeEvent::mapRowChangeEvent(ironfist::NewDataSet::mapRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::mapRow^  NewDataSet::mapRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::mapRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::heroRowChangeEvent::heroRowChangeEvent(ironfist::NewDataSet::heroRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::heroRow^  NewDataSet::heroRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::heroRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::armyRowChangeEvent::armyRowChangeEvent(ironfist::NewDataSet::armyRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::armyRow^  NewDataSet::armyRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::armyRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::slotRowChangeEvent::slotRowChangeEvent(ironfist::NewDataSet::slotRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::slotRow^  NewDataSet::slotRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::slotRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::secondarySkillRowChangeEvent::secondarySkillRowChangeEvent(ironfist::NewDataSet::secondarySkillRow^  row, 
                ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::secondarySkillRow^  NewDataSet::secondarySkillRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::secondarySkillRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::spellRowChangeEvent::spellRowChangeEvent(ironfist::NewDataSet::spellRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::spellRow^  NewDataSet::spellRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::spellRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline NewDataSet::artifactRowChangeEvent::artifactRowChangeEvent(ironfist::NewDataSet::artifactRow^  row, ::System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline ironfist::NewDataSet::artifactRow^  NewDataSet::artifactRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline ::System::Data::DataRowAction NewDataSet::artifactRowChangeEvent::Action::get() {
        return this->eventAction;
    }
}
